AutoGen Definitions dummy;
class = {
  cp-id     = 'group___g_a01';
  cp-name   = 'RDA5807';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a01_1a1db36d126d26a553668c1b70de9b3823';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setDelayAfterCrystalOn';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'ms_value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '602';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the Delay After Crystal On (default 500ms)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param ms_value  Value in milliseconds
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1gadf634cb6733022e30d8f1a74a5946e78';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setI2CBusAddrs';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'directAccess';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fullAccess';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '611';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets alternatives I2C bus address.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
You do not need use this function on RDA5807M
@param directAccess 
@param fullAccess 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8h_1a18c3e5a103b683af7c46d8b9a3d47518';
        sec-mem-ref-line = '577';
        sec-mem-ref-name = 'deviceAddressDirectAccess';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8h_1a81c00f45187f93be0698ef8c5bd80619';
        sec-mem-ref-line = '578';
        sec-mem-ref-name = 'deviceAddressFullAccess';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1gab9e3a5584a6238f719e9c9e49435f5ce';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusRegisters';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '616';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets all current device status and RDS information registers (From 0x0A to 0x0F)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@see RDA5807M - SINGLE-CHIP BROADCAST FMRADIO TUNER; pages 5, 9, 12 and 13. 
@see rda_reg0a, rda_reg0b, rda_reg0c, rda_reg0d, rda_reg0e, rda_reg0f
@see shadowStatusRegisters;
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga04e5fe0cacbdcae620388a15630cf9c1';
        sec-mem-ref-line = '649';
        sec-mem-ref-name = 'getRdsFlagAB';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga32c361b9b996a5920519315aa86d174d';
        sec-mem-ref-line = '663';
        sec-mem-ref-name = 'getRdsGroupType';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gae3bde947a89c6dadfc4dc22aea85b467';
        sec-mem-ref-line = '691';
        sec-mem-ref-name = 'getRdsProgramType';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga96152112619e139bd7e0ff523009a161';
        sec-mem-ref-line = '781';
        sec-mem-ref-name = 'getRdsText';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga5a26789f1910a5b2098919dbd50e6a3c';
        sec-mem-ref-line = '807';
        sec-mem-ref-name = 'getRdsText0A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga482098a64299cb8af976d4d10a460212';
        sec-mem-ref-line = '836';
        sec-mem-ref-name = 'getRdsText2A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gacd6614bc7be99d55a3d9a17739ee7074';
        sec-mem-ref-line = '865';
        sec-mem-ref-name = 'getRdsText2B';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gaef398d848e7378ec4897965b8e1b4441';
        sec-mem-ref-line = '891';
        sec-mem-ref-name = 'getRdsTime';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gad85ccedd8baecd8bc2f42325a3ee8741';
        sec-mem-ref-line = '677';
        sec-mem-ref-name = 'getRdsVersionCode';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga1f4bc3d6f9d94171b2965dbb4e812f4f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatus';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'reg';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '617';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the register content of a given status register (from 0x0A to 0x0F)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Useful when you need just a specific status register content.


This methos update the first element of the shadowStatusRegisters linked to the register
@return rdax_reg0a the reference to current value of the 0x0A register. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga3b581b82ab8c631cfec537a47008ddf3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setRegister';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'reg';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '618';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets a given value to a specific device register.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@see RDA5807M - SINGLE-CHIP BROADCAST FMRADIO TUNER; pages 5, 9, 10 and 11. 
@see rda_reg02, rda_reg03, rda_reg04, rda_reg05, rda_reg06, rda_reg07

@param reg    register number (valid values is between 0x02 and 0x07)   
<br>
@param value  the unsigned 16 bits word value (see rda_rec0x data types)   
<br>
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga677eff1084b294696a32e3ca4dfe593b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setGpio';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'gpioPin';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'gpioSetup';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'mcuPin';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
-1
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '620';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the Device GPIO pins.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method is useful to add control to the system via GPIO RDA devive pins.


For example: You can use these pins to control RDS and SEEK via interrupt. 


GPIOs are General Purpose I/O pin.  
<br>


GPIO setup


When gpioPin is 1; gpioSetup can be: 00 = High impedance; 01 = Reserved; 10 = Low; 11 = High


When gpioPin is 2; gpioSetup can be: 00 = High impedance; 01 = Interrupt (INT) 10 = Low; 11 = High


When gpioPin is 2; gpioSetup can be: 00 = High impedance; 01 = Mono/Stereo indicator (ST) = Low; 11 = High

@param gpioPin   gpio number (1, 2 or 3)
@param gpioSetup See description above
@param mcuPip    MCU (Arduino) pin connected to the gpio
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga3fe1feed45d3290beba0efef491128e6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'waitAndFinishTune';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '622';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Waits for Seek or Tune finish.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gade55e697c7752811086300e710727397';
        sec-mem-ref-line = '364';
        sec-mem-ref-name = 'seek';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gaa9cfaddbd43257e810bb3817b021fa8a';
        sec-mem-ref-line = '219';
        sec-mem-ref-name = 'setChannel';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga3f6dace4c93f82ec66da5641e3e3fdaa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'softReset';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '624';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Resets the device.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The RDA5807M is RESET itself When VIO is Power up. 


Also, it support soft reset by triggering the 0x02 register (rda_reg02) bit 1 from 0 to 1. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga30d2b0c4662922df53bcef118663329c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'powerUp';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '626';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Powers the receiver on.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gac79c1fec6c416c9993ff19362fe312cb';
        sec-mem-ref-line = '196';
        sec-mem-ref-name = 'setup';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga214f631aef72ece69db73c99879c7c46';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'powerDown';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '627';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Power the receiver off.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1gac79c1fec6c416c9993ff19362fe312cb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setup';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'clock_type';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
CLOCK_32K
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'oscillator_type';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
OSCILLATOR_TYPE_CRYSTAL
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '629';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Starts the device.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param clock_type       Clock used.
@param oscillator_type  optional. Sets the Oscillator type used (Default Crystal or Ref. Clock).
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga30d2b0c4662922df53bcef118663329c';
        sec-mem-ref-line = '155';
        sec-mem-ref-name = 'powerUp';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1gad16a6afa9520b77498b17a72c226305a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFrequency';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '631';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the frequency.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param frequency
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga59b981002d383a13731bd939482a5236';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFrequency';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '634';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the current frequency.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return uint16_t
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga4e8db177fea475ea00fa04e3d8f1f08c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFrequencyUp';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '635';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Increments the current frequency.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The increment uses the band space as step. See array: uint16_t fmSpace[4] = {100/10, 200/10, 50/10, 25/10};
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1gadba771c864ace7a8373a76554b9d3e6a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFrequencyDown';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '636';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Decrements the current frequency.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The drecrement uses the band space as step. See array: uint16_t fmSpace[4] = {20, 10, 5, 1};
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga1476967ed4e1d9bc00e2ea8e3135520e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRealFrequency';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '638';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the current frequency bases on the current channel.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The current channel is stored in the 0x0A register. This value is updated after a tune or seek operation.


The current frequency can be calculated by the formula below

<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> Band</th>    <th class="markdownTableHeadNone"> Formula</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 0</td>    <td class="markdownTableBodyNone"> Frequency = Channel Spacing (kHz) x READCHAN[9:0]+ 87.0 MHz</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 1 or 2</td>    <td class="markdownTableBodyNone"> Frequency = Channel Spacing (kHz) x READCHAN[9:0]+ 76.0 MHz</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 3</td>    <td class="markdownTableBodyNone"> Frequency = Channel Spacing (kHz) x READCHAN[9:0]+ 65.0 MHz</td>  </tr>
</table>

@see setChannel, setFrequency, setBand, setSpace
@see RDA5807M - SINGLE-CHIP BROADCAST FM RADIO TUNER - Rev.1.1–Aug.2015; pages 9 and 12. 
@return uint16_t
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga39480a49f7878fffe8c3ddf120aba2b0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRealChannel';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '639';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the current channel stored in 0x0A status register.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@see setChannel, setFrequency, setBand, setSpace
@see RDA5807M - SINGLE-CHIP BROADCAST FM RADIO TUNER - Rev.1.1–Aug.2015; pages 9 and 12. 

@return uint16_t current channel value
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1gaa9cfaddbd43257e810bb3817b021fa8a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setChannel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'channel';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '640';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the channel.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method tunes the rteceiver in a given channel. 


The channel can be calculated by using the follow formula


channel = (desired frequency - start band frequency) / space channel in use / 10.0);

@see setFrequency, setBand, setSpace
@see RDA5807M - SINGLE-CHIP BROADCAST FM RADIO TUNER - Rev.1.1–Aug.2015; pages 9 and 12.

@param channel
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga3fe1feed45d3290beba0efef491128e6';
        sec-mem-ref-line = '132';
        sec-mem-ref-name = 'waitAndFinishTune';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga87de696f0a40724c19c89b6b48766020';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'seek';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'seek_mode';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'direction';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '641';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek function.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param seek_mode  if 0, wrap at the upper or lower band limit and continue seeking; 1 = stop seeking at the upper or lower band limit   
<br>
@param direction  if 0, seek down; if 1, seek up.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1gade55e697c7752811086300e710727397';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'seek';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'seek_mode';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'direction';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void(*)()
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'showFunc';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '642';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek function.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Seeks a station up or down.


Seek up or down a station and call a function defined by the user to show the frequency during the seek process. 


Seek begins at the current channel, and goes in the direction specified with the SEEKUP bit. Seek operation stops when a channel is qualified as valid according to the seek parameters, the entire band has been searched (SKMODE = 0), or the upper or lower band limit has been reached (SKMODE = 1).


The STC bit is set high when the seek operation completes and/or the SF/BL bit is set high if the seek operation was unable to find a channel qualified as valid according to the seek parameters. The STC and SF/BL bits must be set low by setting the SEEK bit low before the next seek or tune may begin.


The SEEK bit is set low and the STC bit is set high when the seek operation completes.


It is important to say you have to implement a show frequency function. This function have to get the frequency via getFrequency function.  
<br>


Example:
@code 

SI470X rx;

void showFrequency() {
   uint16_t freq = rx.getFrequency();
   Serial.print(freq); 
   Serial.println("MHz ");
}

void loop() {
 .
 .
     rx.seek(SI470X_SEEK_WRAP, SI470X_SEEK_UP, showFrequency); // Seek Up
 .
 .
}
@endcode
@param seek_mode  Seek Mode; 0 = Wrap at the upper or lower band limit and continue seeking (default); 1 = Stop seeking at the upper or lower band limit.
@param direction  Seek Direction; 0 = Seek down (default); 1 = Seek up.
@param showFunc  function that you have to implement to show the frequency during the seeking process. Set NULL if you do not want to show the progress. 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga3fe1feed45d3290beba0efef491128e6';
        sec-mem-ref-line = '132';
        sec-mem-ref-name = 'waitAndFinishTune';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga41dbf6ea359175b3671072a3c382d42c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSeekThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '643';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets RSSI Seek Threshold.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param value
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga7ee7b25b9fb81b8547a7fe230fcd6482';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setBand';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'band';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '645';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the FM band. See table below.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
FM band table 

<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> Value</th>    <th class="markdownTableHeadNone"> Description</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 00</td>    <td class="markdownTableBodyNone"> 87–108 MHz (US/Europe)</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 01</td>    <td class="markdownTableBodyNone"> 76–91 MHz (Japan)</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 10</td>    <td class="markdownTableBodyNone"> 76–108 MHz (world wide)</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 11</td>    <td class="markdownTableBodyNone"> 65 –76 MHz (East Europe) or 50-65MHz (see bit 9 of gegister 0x06)</td>  </tr>
</table>

@param band FM band index. See table above. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga76f6c3400b038aef15ba7318592e1dd0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSpace';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'space';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '646';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the FM channel space.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Channel space table

<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> Value</th>    <th class="markdownTableHeadNone"> Description</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 00</td>    <td class="markdownTableBodyNone"> 100KHz</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 01</td>    <td class="markdownTableBodyNone"> 200KHz</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 10</td>    <td class="markdownTableBodyNone"> 50KHz</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 11</td>    <td class="markdownTableBodyNone"> 25KHz</td>  </tr>
</table>

@param space FM channel space. See table above.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga4bd7597d4c9090b04486aec21a6a0a5d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRssi';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '647';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the current Rssi.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
RSSI; 000000 = min; 111111 = max; RSSI scale is logarithmic.

@return int
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1gadd2c2ab8b861ab0714fdeb99c774d656';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSoftmute';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '649';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets Soft Mute Enable or disable.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param value true = enable; false=disable
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1gad6e77ffbeb3f4dc885548130e09590d6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setMono';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '651';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets audio Mono or stereo.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param value TRUE = Mono; FALSE force stereo
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga8002bb394ef19db02e04a39de04dffc5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setBass';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '652';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets Bass Boost.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param value FALSE = Disable; TRUE = Enable
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga250ff3788a7831dae3c6200919b446dd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'isStereo';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '653';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the current Stereo status.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return TRUE if stereo; 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga53316e685a196bba1819f5b1fe2b42af';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getDeviceId';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '655';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the Device identification.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 \xrefitem todo 1.@return number
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1gafec3018913d735ee0684b88cf503c84a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setMute';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '657';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets Audio mute or unmute.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param value TRUE = mute; FALSE = unmute
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga51bf4344ebeb44f7170265901df870f5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setVolume';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '658';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the audio volume level.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param value
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga743d91d820922b3feda10d06443bc8a9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getVolume';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '659';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the current audio volume level.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return uint8_t  0 to 15
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga864af32df4d3365e03f8876703218283';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setVolumeUp';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '660';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Increments the audio volume.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga910965f74897b0246a0b3bed39743d8c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setVolumeDown';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '661';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Decrements the audio volume.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a03_1ga4f8fe00a561c39d2dc9a0a143b1866e9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmDeemphasis';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'de';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '663';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets De-emphasis.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
75 μs. Used in USA (default); 50 μs. Used in Europe, Australia, Japan.

@param de  0 = 75 μs; 1 = 50 μs
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1ga4b741f1433eda57949bb40fa9e973732';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setRDS';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '666';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the RDS operation.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Enable or Disable the RDS

@param true = turns the RDS ON; false  = turns the RDS OFF
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1gaecbab42ef08c486b2eb1ab25649c921a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setRBDS';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '667';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the RBDS operation.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Enable or Disable the RDS

@param true = turns the RBDS ON; false  = turns the RBDS OFF
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1gae27337170a5f3dedebf585aa19855ad6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setRdsFifo';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '668';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets RDS fifo mode enable.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param value  If true, it makes the the fifo mode enable. 
@return true  or false
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1gab3accd716dc5fe07d936b860b64d9e4e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'clearRdsFifo';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '669';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Clear RDS fifo.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param value  If true, it makes the the fifo mode enable. 
@return true  or false
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1gacfa48dfcf792a9bcee489658177aed90';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsReady';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '671';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns true if RDS Ready.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Read address 0Ah and check the bit RDSR.


When using the polling method, it is best not to poll continuously. The data will appear in intervals. 
@return true 
@return false 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1ga04e5fe0cacbdcae620388a15630cf9c1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsFlagAB';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '672';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns the current Text Flag A/B  
<br>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return uint8_t current Text Flag A/B  
<br>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gab9e3a5584a6238f719e9c9e49435f5ce';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'getStatusRegisters';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1gad85ccedd8baecd8bc2f42325a3ee8741';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsVersionCode';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '673';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the version code (extracted from the Block B)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@returns  0=A or 1=B
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gab9e3a5584a6238f719e9c9e49435f5ce';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'getStatusRegisters';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1ga32c361b9b996a5920519315aa86d174d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsGroupType';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '674';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Return the group type.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return uint16_t 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gab9e3a5584a6238f719e9c9e49435f5ce';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'getStatusRegisters';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1gae3bde947a89c6dadfc4dc22aea85b467';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsProgramType';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '675';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns the Program Type (extracted from the Block B)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<br>
@see https://en.wikipedia.org/wiki/Radio_Data_System
@return program type (an integer betwenn 0 and 31)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gab9e3a5584a6238f719e9c9e49435f5ce';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'getStatusRegisters';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1ga6afb347f32121c480adea2a36032d56f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getNext2Block';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'c';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '676';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Process data received from group 2B.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param c  char array reference to the "group 2B" text 
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga5a26789f1910a5b2098919dbd50e6a3c';
        sec-mem-ref-line = '807';
        sec-mem-ref-name = 'getRdsText0A';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gacd6614bc7be99d55a3d9a17739ee7074';
        sec-mem-ref-line = '865';
        sec-mem-ref-name = 'getRdsText2B';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1ga3ab713bb63978518d42a761b9db445c9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getNext4Block';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'c';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '677';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Process data received from group 2A.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param c  char array reference to the "group  2A" text 
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga96152112619e139bd7e0ff523009a161';
        sec-mem-ref-line = '781';
        sec-mem-ref-name = 'getRdsText';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga482098a64299cb8af976d4d10a460212';
        sec-mem-ref-line = '836';
        sec-mem-ref-name = 'getRdsText2A';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1ga96152112619e139bd7e0ff523009a161';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsText';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '678';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the RDS Text when the message is of the Group Type 2 version A.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return char*  The string (char array) with the content (Text) received from group 2A 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga3ab713bb63978518d42a761b9db445c9';
        sec-mem-ref-line = '742';
        sec-mem-ref-name = 'getNext4Block';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gab9e3a5584a6238f719e9c9e49435f5ce';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'getStatusRegisters';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1ga5a26789f1910a5b2098919dbd50e6a3c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsText0A';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '679';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the station name and other messages.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 \xrefitem todo 3.@return char* should return a string with the station name. 
        However, some stations send other kind of messages
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga6afb347f32121c480adea2a36032d56f';
        sec-mem-ref-line = '705';
        sec-mem-ref-name = 'getNext2Block';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gab9e3a5584a6238f719e9c9e49435f5ce';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'getStatusRegisters';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1ga482098a64299cb8af976d4d10a460212';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsText2A';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '680';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the Text processed for the 2A group.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@ 

@return char* string with the Text of the group A2  
<br>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga3ab713bb63978518d42a761b9db445c9';
        sec-mem-ref-line = '742';
        sec-mem-ref-name = 'getNext4Block';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gab9e3a5584a6238f719e9c9e49435f5ce';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'getStatusRegisters';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1gacd6614bc7be99d55a3d9a17739ee7074';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsText2B';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '681';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the Text processed for the 2B group.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return char* string with the Text of the group AB  
<br>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1ga6afb347f32121c480adea2a36032d56f';
        sec-mem-ref-line = '705';
        sec-mem-ref-name = 'getNext2Block';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gab9e3a5584a6238f719e9c9e49435f5ce';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'getStatusRegisters';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1gaef398d848e7378ec4897965b8e1b4441';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsTime';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '682';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the RDS time and date when the Group type is 4.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 \xrefitem todo 4.@return char* a string with hh:mm +/- offset
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_r_d_a5807_8cpp_1gab9e3a5584a6238f719e9c9e49435f5ce';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'getStatusRegisters';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1ga25df690020bab4154b0737e7365ed8ea';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRdsSync';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '683';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the Rds Sync.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns true if RDS currently synchronized.
@return true or false
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1ga2e63d5c85cb1825492a5ba2ea3bef2c3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getBlockId';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '684';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the current Block ID.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
1= the block id of register 0cH,0dH,0eH,0fH is E


0= the block id of register 0cH, 0dH, 0eH,0fH is A, B, C, D
@return  0= the block id of register 0cH, 0dH, 0eH,0fH is A, B, C, D; 1 = the block id of register 0cH,0dH,0eH,0fH is E
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1gadcc73bed36f5dbad1b41a8777be575d9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getErrorBlockB';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '685';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the current Status of block B.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Block Errors Level of RDS_DATA_1, and is always read as Errors Level of RDS BLOCK B (in RDS mode ) or E (in RBDS mode when ABCD_E flag is 1).
<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> value</th>    <th class="markdownTableHeadNone"> description</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 00</td>    <td class="markdownTableBodyNone"> 0 errors requiring correction</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 01</td>    <td class="markdownTableBodyNone"> 1~2 errors requiring correction</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 10</td>    <td class="markdownTableBodyNone"> 3~5 errors requiring correction</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 11</td>    <td class="markdownTableBodyNone"> 6+ errors or error in checkword, correction not possible</td>  </tr>
</table>

 <strong>Available only in RDS Verbose mode</strong> 

@return  value See table above.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_a04_1ga0d809c6cc2928e1fee006713f77b60e9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'hasRdsInfo';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '686';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns true when the RDS system has valid information.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns true if RDS currently synchronized; the information are A, B, C and D blocks; and no errors 
@return  true or false
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'protected-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a18c3e5a103b683af7c46d8b9a3d47518';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'deviceAddressDirectAccess';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= I2C_ADDR_DIRECT_ACCESS
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '577';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8h_1gadf634cb6733022e30d8f1a74a5946e78';
        sec-mem-ref-line = '611';
        sec-mem-ref-name = 'setI2CBusAddrs';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a81c00f45187f93be0698ef8c5bd80619';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'deviceAddressFullAccess';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= I2C_ADDR_FULL_ACCESS
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '578';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_r_d_a5807_8h_1gadf634cb6733022e30d8f1a74a5946e78';
        sec-mem-ref-line = '611';
        sec-mem-ref-name = 'setI2CBusAddrs';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a55c07acd68120f74f787999364fc92c9';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'resetPin';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '580';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a14040afdfd6c6cf486278c4e75c63927';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentFrequency';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '581';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aaf56888de5a078b5e5090a0b0dd6ae61';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentFMBand';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '582';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ae175c8602c76c5512c61b836de086620';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentFMSpace';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '583';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a33272a8f152f2307adc012072b8e0582';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentVolume';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '584';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a022d3357b6bddf3477b3f26f2d78a75c';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'gpio1Control';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= -1
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '586';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Can be used to add control to the  system via GPIO1 pin.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ab6a9fc2bd5ca266079c3e7796b5025af';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'gpio2Control';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= -1
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '587';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Can be used to add control to the  system via GPIO2 pin.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ae6f2d5f535edc14951e75a03e46ebc01';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'gpio3Control';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= -1
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '588';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Can be used to add control to the  system via GPIO3 pin.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a70104fe05d727c5047975612599c9dca';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'clockType';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= CLOCK_32K
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '590';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a4c8780f2d28725d66850f9e3be14745a';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oscillatorType';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= OSCILLATOR_TYPE_CRYSTAL
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '591';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a8b9e02f7c7121cf57fc0006f4ff7162a';
      sec-mem-virt = normal;
      sec-mem-prot = protected;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'maxDelayAftarCrystalOn';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= MAX_DELAY_AFTER_OSCILLATOR
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '593';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ae51bb0aaf958ee320da80866bb20ffb5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'shadowStatusRegisters';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '543';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
shadow status registers
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ae9572809d64fc5c82f95d4f26d5c308d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'shadowRegisters';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '544';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
shadow configuration registers
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1af9cbd65bd00bce76f8b362159cf9d589';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg00 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg00';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg00 *)&shadowRegisters[0]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '547';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a63267deb8311ff567df5ae6202ffa3fb';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg01 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg01';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg01 *)&shadowRegisters[1]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '548';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a68804842ce8d8c4304bc260b6a386e12';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg02 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg02';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg02 *)&shadowRegisters[2]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '549';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a132aac1d76094cdc72e5b4b7db289c82';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg03 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg03';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg03 *)&shadowRegisters[3]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '550';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a62e2d8060258c3a4d3406831092d2072';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg04 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg04';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg04 *)&shadowRegisters[4]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '551';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a990456ae8b88efa66b0816010ee24244';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg05 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg05';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg05 *)&shadowRegisters[5]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '552';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1af368d9ec82388831ddf4749f0a83a1b3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg06 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg06';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg06 *)&shadowRegisters[6]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '553';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a35030e0df66225f165407b4848ec8921';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg07 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg07';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg07 *)&shadowRegisters[7]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '554';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a57b48edbf9ba4cef513cc45223c690d8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg08 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg08';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg08 *)&shadowRegisters[8]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '555';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a249a8706a3b945522e2215e4eeea7407';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg0a *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg0a';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg0a *)&shadowStatusRegisters[0]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '558';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ab14d92c603d940e16e2f1fa6b179b74f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg0b *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg0b';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg0b *)&shadowStatusRegisters[1]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '559';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a72a563279c17e5646a892ae77cfd8c1a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg0c *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg0c';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg0c *)&shadowStatusRegisters[2]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '560';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a619559a0a083492f37527f5206a6c25d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg0d *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg0d';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg0d *)&shadowStatusRegisters[3]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '561';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a61725075be18d3439886e1414a0ac119';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg0e *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg0e';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg0e *)&shadowStatusRegisters[4]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '562';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a1613897e42f69fadd07a6e0c713a4c6b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
rda_reg0f *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reg0f';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (rda_reg0f *)&shadowStatusRegisters[5]
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '563';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1acddb5bea9e4872e9aecf4dc9bd89a1e6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'startBand';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {8700, 7600, 7600, 6500}
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '566';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aaede268d40e40776118adbc1a8400418';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'endBand';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {10800, 9100, 10800, 7600}
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '567';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
End FM band limit.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ad77c4ef4294d6de7b1711bac943ae97c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'fmSpace';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {100, 200, 50, 25}
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '568';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1af7eb4e812ca7b0883a3e9c7879a034d9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rds_buffer2A';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '570';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Radio Text buffer - Program Information.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a81d7aaf8d628afb9cc268777fea95045';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rds_buffer2B';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '571';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Radio Text buffer - Station Informaation.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a01973fd833000d82609206bfbef62977';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rds_buffer0A';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '572';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Basic tuning and switching information (Type 0 groups)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aec9b51525f983cfd4b008c3c79b2b22c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rds_time';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '573';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS date time received information.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '539';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
KT0915 Class.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This class implements all functions that will help you to control the KT0915 devices.

@author PU2CLR - Ricardo Lima Caratti
_EnD_oF_dEf_TeXt_;
}; /* class */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg00';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ac5a1a7191e10e3c1d300537387e6acbc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg00::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '94';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a4032484c615397b498d1af01aa1d1453';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '95';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '90';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x00.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg00.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aac492b91a84a26e0d5b03df920b988ee';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CHIPID';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '92';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Chip ifdef.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1abd2103035a8021942390a78a431ba0c4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '91';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg01';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a95db31874aa1c376e10041fbf4c04bd0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg01::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '109';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a5753f7265ef5b1291ff160c431ebe863';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '110';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '104';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x01 - Dummy.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
It is not documented by the RDA. 
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg01.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a51ab88497cad20027df936afa223b23d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lowByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '107';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7b99e4a5dc723242645ede8c604610df';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'highByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '108';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '106';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg02';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a1809838a4ec469d3ff1eeb7dacb89252';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg02::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '152';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a1a250acebf8f445cc5b685da35ae2b7a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '153';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '135';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x02 - Basic setup: RESET configuration;.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Clock type configuration; seek operation; Sterio/Mono; Bass;  and Audio configuration 


The RDA5807M is RESET itself when power up. You also can use soft reset by triggering SOFT_RESET bit to 1. 


Seek begins in the direction specified by SEEKUP and ends when a channel is found, or the entire band has been searched.


The SEEK bit is set low and the STC bit is set high when the seek operation completes.


RCLK NON-CALIBRATE MODE. if 0=RCLK clock is always supply; if 1=RCLK clock is not always supply when FM work ( when 1, RDA5807M can’t directly support -20 °C ~70 °C temperature. 


Only suppory ±20°C temperature swing from tune point).

 Clock CLK_MODE table

<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> Value</th>    <th class="markdownTableHeadNone"> Clock</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 000</td>    <td class="markdownTableBodyNone"> 32.768kHz</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 001</td>    <td class="markdownTableBodyNone"> 12Mhz</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 101</td>    <td class="markdownTableBodyNone"> 24Mhz</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 010</td>    <td class="markdownTableBodyNone"> 13Mhz</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 110</td>    <td class="markdownTableBodyNone"> 26Mhz</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 011</td>    <td class="markdownTableBodyNone"> 19.2Mhz</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 111</td>    <td class="markdownTableBodyNone"> 38.4Mhz</td>  </tr>
</table>
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg02.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ab332708e4304e13c9b424e7465254954';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ENABLE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '138';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Power Up Enable; 0 = Disabled; 1 = Enabled.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1afea1117fa1ab6be6c3b43d3df783cce0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SOFT_RESET';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '139';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Soft reset; If 0, not reset; If 1, reset.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a60923301c913b155d020368e74200657';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'NEW_METHOD';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '140';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
New Demodulate Method Enable, can improve 0 the receive sensitivity about 1dB.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a1ede90c00f1a2c926163d5203ec3b75e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDS_EN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '141';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS/RBDS enable; If 1, rds/rbds enable.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7f2173081ed2422920d15baa1919e01b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CLK_MODE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '142';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
See table above.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a3afc70c9a6693899b152ca51a42f07b7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SKMODE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '143';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek Mode; 0 = wrap at the upper or lower band limit and continue seeking; 1 = stop seeking at the upper or lower band limit.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a71fa98cecf9e896e77d11325dbe19dc6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SEEK';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '144';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek; 0 = Disable stop seek; 1 = Enable;.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aed8a1fd68dec9364930b51d020ba07d6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SEEKUP';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '145';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek Up; 0 = Seek down; 1 = Seek up.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ad1ec79cd81992e6bd3131ce076f78679';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RCLK_DIRECT_IN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '146';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RCLK clock use the directly input mode. 1 = enable.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a253053953b1971ea97f782cc746e5e55';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'NON_CALIBRATE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '147';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
0=RCLK clock is always supply; 1=RCLK clock is not always supply when FM work
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ae1618eb6a84ac61faefe0a87d5649689';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BASS';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '148';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Bass Boost; 0 = Disabled; 1 = Bass boost enabled.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1af5f75f1b95652443e4398974b82c3f7c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MONO';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '149';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Mono Select; 0 = Stereo; 1 = Force mono.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1af7dd74521218c605e3553fdeb618e6eb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DMUTE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '150';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Mute Disable; 0 = Mute; 1 = Normal operation.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1adec239f2597576f6182f387472c2272b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DHIZ';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '151';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Audio Output High-Z Disable; 0 = High impedance; 1 = Normal operation.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '137';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg03';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a8a7bf8e4ddb7f76cbafe53ba366d04ca';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg03::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '200';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a896ca93bb7040c45cbf062396d40ebca';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '201';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '192';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x03.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Receiver configuratio


The tune operation begins when the TUNE bit is set high. The STC bit is set high when the tune operation completes.


The tune bit is reset to low automatically when the tune operation completes

Channel space table

<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> Value</th>    <th class="markdownTableHeadNone"> Description</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 00</td>    <td class="markdownTableBodyNone"> 100KHz</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 01</td>    <td class="markdownTableBodyNone"> 200KHz</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 10</td>    <td class="markdownTableBodyNone"> 50KHz</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 11</td>    <td class="markdownTableBodyNone"> 25KHz</td>  </tr>
</table>


FM band table 

<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> Value</th>    <th class="markdownTableHeadNone"> Description</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 00</td>    <td class="markdownTableBodyNone"> 87–108 MHz (US/Europe)</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 01</td>    <td class="markdownTableBodyNone"> 76–91 MHz (Japan)</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 10</td>    <td class="markdownTableBodyNone"> 76–108 MHz (world wide)</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 11</td>    <td class="markdownTableBodyNone"> 65 –76 MHz (East Europe) or 50-65MHz (see bit 9 of gegister 0x06)</td>  </tr>
</table>

 Channel select table 

<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> BAND</th>    <th class="markdownTableHeadNone"> Description</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 0</td>    <td class="markdownTableBodyNone"> Frequency = Channel Spacing (kHz) x CHAN+ 87.0 MHz</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 1 or 2</td>    <td class="markdownTableBodyNone"> Frequency = Channel Spacing (kHz) x CHAN + 76.0 MHz</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 3</td>    <td class="markdownTableBodyNone"> Frequency = Channel Spacing (kHz) x CHAN + 65.0 MHz</td>  </tr>
</table>
IMPORTANT: CHAN is updated after a seek operation. 
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg03.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a6506ae39fdca9845e3a6de3865183e57';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SPACE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '195';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
See Channel space table above.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aa8a5bbeedca093b94b7f0d3f185b98f7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BAND';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '196';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seet band table above.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a05069c0e15b79590b44ff985487037b7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'TUNE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '197';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Tune; 0 = Disable; 1 = Enable.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a799f81e68cf18ca017f69d9405267e41';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DIRECT_MODE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '198';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Directly Control Mode, Only used when test.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1adf21771052967392286eeab054755423';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CHAN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '199';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Channel Select.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '194';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg04';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1af1c6e72539ee65749eb0f049303ad616';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg04::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '227';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a5c872e111c0fbaf477625700a2076359';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '228';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '211';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x04.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Receiver properties 


Volume scale is logarithmic When 0000, output mute and output impedance is very large


Setting STCIEN = 1 will generate a low pulse on GPIO2 when the interrupt occurs.
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg04.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a0ed149a12d2a87f1496cdc90c23bfb1c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GPIO1';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '214';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
General Purpose I/O 1. when gpio_sel=01; 00 = High impedance; 01 = Reserved; 10 = Low; 11 = High.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ac8715973930ed16be4d52340ef11181b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GPIO2';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '215';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
General Purpose I/O 2. when gpio_sel=01; 00 = High impedance; 01 = Reserved; 10 = Low; 11 = High.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1af2d579fe9d83fc7fe6f55c570c02af38';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GPIO3';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '216';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
General Purpose I/O 1. when gpio_sel=01; 00 = High impedance; 01 = Mono/Stereo indicator (ST); 10 = Low; 11 = High.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aff7333bc2a0234725b53e4e4207e1915';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'I2S_ENABLE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '217';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
I2S enable; 0 = disabled; 1 = enabled.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a1742cf1b14a750532e645aab85933d3c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSVD1';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '218';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1afddec52dd7b530641dc1ae72d27a429f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AFCD';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '219';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
AFC disable; If 0, afc work; If 1, afc disabled.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7e06d843d0840990717eb42b3b7e554c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SOFTMUTE_EN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '220';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If 1, softmute enable.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a28055088ef40b9bdc9378b3809a21199';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDS_FIFO_CLR';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '221';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = clear RDS fifo
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a3a52f3c22ed6fcde5bf696a6c02c9e73';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '222';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
De-emphasis; 0 = 75 μs; 1 = 50 μs.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a39f20b8df74171b4ee31bab0b0680310';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDS_FIFO_EN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '223';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = RDS fifo mode enable.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a9acb1f82a2515f84bce0747ced06fed8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RBDS';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '224';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = RBDS mode enable; 0 = RDS mode only
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ab09bf67829bc4d5914945a87be624698';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STCIEN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '225';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek/Tune Complete Interrupt Enable; 0 = Disable Interrupt; 1 = Enable Interrupt;.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a8d50eb6e30711e4eb7625e651ed1a11d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSVD2';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '226';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '213';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg05';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ad2153e9e90608e267b44117ececc5783';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg05::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '245';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aaa18c311f81277e3d73436ea0b601bb1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '246';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '235';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x05.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg05.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a730956af87021c351084317bbc63eea6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'VOLUME';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '238';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
DAC Gain Control Bits (Volume); 0000 = min volume; 1111 = max volume.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a160505dce0d227e0f21232f52fef890f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LNA_ICSEL_BIT';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '239';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Lna working current bit: 00=1.8mA; 01=2.1mA; 10=2.5mA; 11=3.0mA.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a11b8f14c44524bb37f0a89d4b5559a94';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LNA_PORT_SEL';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '240';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
LNA input port selection bit: 00: no input; 01: LNAN; 10: LNAP; 11: dual port input.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a991f75a1bf4d56192acecdf31ad3db47';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SEEKTH';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '241';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek SNR Threshold value.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a8d50eb6e30711e4eb7625e651ed1a11d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSVD2';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '242';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ac34168e070146678d72546abc1c8b236';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SEEK_MODE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '243';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Default value is 00; When = 10, will add the RSSI seek mode.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a54e8dc27cd18af681fec547952404531';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'INT_MODE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '244';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If 0, generate 5ms interrupt; If 1, interrupt last until read reg0CH action occurs.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '237';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg06';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a360eecf942f40d3f51812293e76a0d67';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg06::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '282';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a6821afdfb5ab6f0a279ef1c4fdeaa9e1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '283';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '267';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x06.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
I2S_SW_CNT values table

<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> Value</th>    <th class="markdownTableHeadNone"> Description</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 0b1000</td>    <td class="markdownTableBodyNone"> WS_STEP_48</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 0b0111</td>    <td class="markdownTableBodyNone"> WS_STEP=44.1kbps</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 0b0110</td>    <td class="markdownTableBodyNone"> WS_STEP=32kbps</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 0b0101</td>    <td class="markdownTableBodyNone"> WS_STEP=24kbps</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 0b0100</td>    <td class="markdownTableBodyNone"> WS_STEP=22.05kbps</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 0b0011</td>    <td class="markdownTableBodyNone"> WS_STEP=16kbps</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 0b0010</td>    <td class="markdownTableBodyNone"> WS_STEP=12kbps</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 0b0001</td>    <td class="markdownTableBodyNone"> WS_STEP=11.025kbps</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 0b0000</td>    <td class="markdownTableBodyNone"> WS_STEP=8kbps</td>  </tr>
</table>
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg06.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a575d0f8dbbda12d743c6cbd80436d8d2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'R_DELY';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '270';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If 1, R channel data delay 1T.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a4ce1c95146a332f39eb691cbc95ccbb2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'L_DELY';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '271';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If 1, L channel data delay 1T.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a3f5cd3a22eb13c67f7d20adcd15f1ad1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SCLK_O_EDGE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '272';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If 1, invert sclk output when as master.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a90f7e01cd9d2f78095b8d23a9dc1b18d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SW_O_EDGE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '273';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If 1, invert ws output when as master.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1afbff3a29529e5e3276e2bebab1f15a3f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'I2S_SW_CNT';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '274';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Only valid in master mode. See table above.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ab5e655121ad945deced0a44ac51ad7c9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WS_I_EDGE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '275';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If 0, use normal ws internally; If 1, inverte ws internally.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ac20607bab830e003f8aef1927f30da81';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DATA_SIGNED';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '276';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If 0, I2S output unsigned 16-bit audio data. If 1, I2S output signed 16-bit audio data.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ab0a4aea0751fa685c79ed52660ad78fb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SCLK_I_EDGE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '277';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If 0, use normal sclk internally;If 1, inverte sclk internally.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a8f48ecc038b447fc3a713924344e8094';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WS_LR';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '278';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ws relation to l/r channel; If 0, ws=0 ->r, ws=1 ->l; If 1, ws=0 ->l, ws=1 ->r.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a5b44678fa097828236f91b766d1bca94';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SLAVE_MASTER';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '279';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
I2S slave or master; 1 = slave; 0 = master.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a6e2ac78f66cfafa9ecf1b7e62f037b43';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'OPEN_MODE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '280';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Open reserved register mode;  11=open behind registers writing function others: only open behind registers reading function.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ae57526e5b56fb9372080178384f4c872';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSVD';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '281';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '269';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg07';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ac5c4daceecb405708b96c79b477db70b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg07::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '300';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a2dacd798a51d8fc4effa015d9d16c1a0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '301';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '290';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x07.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg07.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aad08cffd0c185c95ee8611afce73ec18';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FREQ_MODE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '293';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If 1, then freq setting changed. Freq = 76000(or 87000) kHz + freq_direct (08H) kHz.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a6183fe98d5a6c9859da1f4d1bd75af33';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SOFTBLEND_EN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '294';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If 1, Softblend enable.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a733877b31393b0f040b3a649004e8e5d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SEEK_TH_OLD';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '295';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek threshold for old seek mode, Valid when Seek_Mode=001.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a1742cf1b14a750532e645aab85933d3c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSVD1';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '296';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a07e1e84799a0bd2c979bff75111e85d5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MODE_50_60';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '297';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = 65~76 MHz;  0 = 50~76MHz
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a76b1c2c14aefb604449d3ff3f0ae80c4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'TH_SOFRBLEND';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '298';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Threshold for noise soft blend setting, unit 2dB (default 0b10000).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a8d50eb6e30711e4eb7625e651ed1a11d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSVD2';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '299';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '292';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg08';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a6b901f2c85429c6822d5e8dc19d1c780';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg08::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '317';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a2d961192507c9b5dcaa83bb2b41c1430';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '318';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '312';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x08 - Direct Frequency.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Valid when freq_mode = 1


Freq = 7600(or 8700) kHz + freq_direct (08H) kHz.


Value to be stores is frequency - 7600 or 8700
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg08.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a51ab88497cad20027df936afa223b23d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lowByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '315';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7b99e4a5dc723242645ede8c604610df';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'highByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '316';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '314';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg0a';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ac3a52ed2e4783d2bb7c1e82716c98af3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg0a::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '348';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a4739c58f7e2dcffa54e2368e98716e99';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '349';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '338';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x0A - Device current status.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
The seek fail flag (SF) is set when the seek operation fails to find a channel with an RSSI level greater than SEEKTH[5:0].


The seek/tune complete (STC) flag is set when the seek or tune operation completes.


 Channel table 

<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> BAND</th>    <th class="markdownTableHeadNone"> Description</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 0</td>    <td class="markdownTableBodyNone"> Frequency = Channel Spacing (kHz) x CHAN+ 87.0 MHz</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 1 or 2</td>    <td class="markdownTableBodyNone"> Frequency = Channel Spacing (kHz) x CHAN + 76.0 MHz</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 3</td>    <td class="markdownTableBodyNone"> Frequency = Channel Spacing (kHz) x CHAN + 65.0 MHz</td>  </tr>
</table>
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg0a.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1abe63df93c3d4af07359a55d5902f0f7a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'READCHAN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '341';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
See Channel table . See table above.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aec8e57d71f07e31203035548b79d03c8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ST';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '342';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Stereo Indicator; 0 = Mono; 1 = Stereo.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a3c723083c9b52fde34d2c4beb725942f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLK_E';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '343';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
When RDS enable: 1 = Block E has been found; 0 = no Block E has been found.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a3928b702beefaf125960c8f1f7fceac7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSS';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '344';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Synchronization; 0 = RDS decoder not synchronized(default); 1 = RDS decoder synchronized; Available only in RDS Verbose mode.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a94a990462684a2fbb5dfc7fab1c8975d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SF';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '345';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek Fail. 0 = Seek successful; 1 = Seek failure;.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a3a247d1d806ebfcd27b09041e3186b4e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STC';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '346';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek/Tune Complete. 0 = Not complete; 1 = Complete;.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1accd030164321bb71a36d491b2e6cd424';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSR';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '347';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS ready; 0 = No RDS/RBDS group ready(default); 1 = New RDS/RBDS group ready.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '340';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg0b';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a0eeacb17a43648ed4c922fb16253fa5c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg0b::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '378';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a025a972ff39a3584183e12de290d0fb6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '379';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '368';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x0B.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Current RDS and device status

Errors Level table (Block Errors Level of RDS_DATA_0 and RDS_DATA_1. 
Always read as Errors Level of RDS BLOCKs A and B (in RDS mode ) or E (in RBDS mode when ABCD_E flag is 1).

<table class="markdownTable">  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> Value</th>    <th class="markdownTableHeadNone"> Description</th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 00</td>    <td class="markdownTableBodyNone"> 0 errors requiring correction</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 01</td>    <td class="markdownTableBodyNone"> 1~2 errors requiring correction</td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 10</td>    <td class="markdownTableBodyNone"> 3~5 errors requiring correction</td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 10</td>    <td class="markdownTableBodyNone"> 6+ errors or error in checkword, correction not possible</td>  </tr>
</table>
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg0b.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1abf73094dcea591929f5c4ffe912d6750';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLERB';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '371';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Block Errors Level of RDS_DATA_1.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a5cf5d2b056255cb2235ce6c52c0e9795';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BLERA';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '372';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Block Errors Level of RDS_DATA_0.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a297000d9caac4f06fe67d8972202b2f8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ABCD_E';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '373';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = the block id of register 0cH,0dH,0eH,0fH is E;  0 = the block id of register 0cH, 0dH, 0eH,0fH is A, B, C, D
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a1742cf1b14a750532e645aab85933d3c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSVD1';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '374';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7b86ad4e3ff3b175ed1b73968c43140f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FM_READY';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '375';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1=ready; 0=not ready.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aa792520704f786ade70d6a06b6b8ba34';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FM_TRUE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '376';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = the current channel is a station; 0 = the current channel is not a station.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a6833f5d3374c1679bea428b50dbad9cc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RSSI';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '377';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RSSI; 000000 = min; 111111 = max; RSSI scale is logarithmic.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '370';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg0c';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aa8b7d1851c44335e2380eb7a4468c093';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg0c::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '393';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aa84daa949defa1d8459599e6a5f7774e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSA';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '394';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
BLOCK A ( in RDS mode) or BLOCK E (in RBDS mode when ABCD_E flag is 1)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '389';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x0C.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
BLOCK A ( in RDS mode) or BLOCK E (in RBDS mode when ABCD_E flag is 1)
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg0c.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a51ab88497cad20027df936afa223b23d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lowByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '391';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7b99e4a5dc723242645ede8c604610df';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'highByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '392';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '390';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg0d';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a28f1298327e3fc8309f38005be0b70a2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg0d::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '409';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a8ea42352501defa20b4a586e146035d2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSB';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '410';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '404';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x0D.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
BLOCK B ( in RDS mode) or BLOCK E (in RBDS mode when ABCD_E flag is 1)
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg0d.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a51ab88497cad20027df936afa223b23d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lowByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '407';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7b99e4a5dc723242645ede8c604610df';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'highByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '408';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '406';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg0e';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a63c425b6b07f0604a43481f0312d3d59';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg0e::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '426';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a519e4146ff314e51a19f354ec7f07b8e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSC';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '427';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '421';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x0E.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
BLOCK C ( in RDS mode) or BLOCK E (in RBDS mode when ABCD_E flag is 1)
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg0e.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a51ab88497cad20027df936afa223b23d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lowByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '424';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7b99e4a5dc723242645ede8c604610df';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'highByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '425';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '423';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg0f';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a2277c8c28e92e2ad993af1c0c5fb4c94';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rda_reg0f::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '442';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a468a600809a23e18a9b40dadccfd3740';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RDSD';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '443';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '437';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Register 0x0F.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
BLOCK D ( in RDS mode) or BLOCK E (in RBDS mode when ABCD_E flag is 1)
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rda_reg0f.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a51ab88497cad20027df936afa223b23d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lowByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '440';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7b99e4a5dc723242645ede8c604610df';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'highByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '441';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '439';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rds_blockb';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ac5781cba2e954484c72ae3077e25afcf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rds_blockb::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'group0';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '473';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a0a430ac426505b17010fe872dba656a8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rds_blockb::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'group2';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '482';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1ab34c18f5ea4466a422f8370757d4fcbc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rds_blockb::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '491';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a5dae9f2b7edfd4dff7592ed38e403344';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'blockB';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '492';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '462';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
RDS Block B data type.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
For GCC on System-V ABI on 386-compatible (32-bit processors), the following stands:

1) Bit-fields are allocated from right to left (least to most significant).
2) A bit-field must entirely reside in a storage unit appropriate for its declared type.
   Thus a bit-field never crosses its unit boundary.
3) Bit-fields may share a storage unit with other struct/union members, including members that are not bit-fields.
   Of course, struct members occupy different parts of the storage unit.
4) Unnamed bit-fields' types do not affect the alignment of a structure or union, although individual
   bit-fields' member offsets obey the alignment constraints.

@see also https://en.wikipedia.org/wiki/Radio_Data_System
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rds_blockb.group0';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a884d9804999fc47a3c2694e49ad2536a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'address';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '465';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aa1b1c0cd777edd2e5cfcaf8e2e7dcab8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DI';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '466';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7a663caea1b722a63dc2868158ed584d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MS';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '467';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a890a10788493e3d572586e991cd43543';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'TA';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '468';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a264bd2c2ca8c895803767b0d39ff4a09';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'programType';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '469';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a59e69d63ce38754ea53c4461b5cba1e2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'trafficProgramCode';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '470';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a20583dcf173525a78f726ef45329c5ae';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'versionCode';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '471';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a19223bd3731a4215ead3ba6a1eb8bbe8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'groupType';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '472';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '464';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rds_blockb.group2';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a884d9804999fc47a3c2694e49ad2536a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'address';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '476';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a652bfdc159637b708ac6e6f92d7650bc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'textABFlag';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '477';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a264bd2c2ca8c895803767b0d39ff4a09';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'programType';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '478';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a59e69d63ce38754ea53c4461b5cba1e2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'trafficProgramCode';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '479';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a20583dcf173525a78f726ef45329c5ae';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'versionCode';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '480';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a19223bd3731a4215ead3ba6a1eb8bbe8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'groupType';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '481';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '475';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rds_blockb.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a9a0364b9e99bb480dd25e1f0284c8555';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'content';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '485';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a652bfdc159637b708ac6e6f92d7650bc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'textABFlag';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '486';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a264bd2c2ca8c895803767b0d39ff4a09';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'programType';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '487';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a59e69d63ce38754ea53c4461b5cba1e2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'trafficProgramCode';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '488';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a20583dcf173525a78f726ef45329c5ae';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'versionCode';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '489';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a19223bd3731a4215ead3ba6a1eb8bbe8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'groupType';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '490';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '484';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rds_date_time';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a9bcded0e419c611d9920953260c352cb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct rds_date_time::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '515';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1abb6c459455299730ef24dc149a871202';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '516';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '505';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Group RDS type 4A ( RDS Date and Time)
When group type 4A is used by the station, it shall be transmitted every minute according to EN 50067.
This Structure uses blocks 2,3 and 5 (B,C,D)

ATTENTION:
To make it compatible with 8, 16 and 32 bits platforms and avoid Crosses boundary, it was necessary to
split minute and hour representation.
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'rds_date_time.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7a86c157ee9713c34fbd7a1ee40f0c5a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'offset';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '508';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a5ba6e404c489ff4f757e7c77cb9fa310';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'offset_sense';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '509';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a756bdae430708e155654a844c2bcc33b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'minute1';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '510';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a57b42af48e9b3407c002d157d89f50ad';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'minute2';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '511';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a0351524e66b386b6638dd47c0d00de65';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'hour1';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '512';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a38034b153ffba397eebfcd07b4a50414';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'hour2';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '513';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7f7685b39180278dd0fa69f523c7bd24';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mjd';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '514';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '507';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a01';
  cp-name   = 'word16_to_bytes';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1aac9f5d78f176c0422d073877cd65fe51';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct word16_to_bytes::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '528';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1abed44166b8c3d82c0c44fb317d3b650a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '529';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '523';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Converts 16 bits word to two bytes.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a01';
  cp-name   = 'word16_to_bytes.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a51ab88497cad20027df936afa223b23d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lowByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '526';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a01_1a7b99e4a5dc723242645ede8c604610df';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'highByte';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      sec-mem-desc-line = '527';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  cp-fileline  = '525';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
file = {
  file-id   = '_r_d_a5807_8cpp';
  file-name = 'RDA5807.cpp';
  file-full-name  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_r_d_a5807_8h';
  file-name = 'RDA5807.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1afb81dd661d531fa5c5422549fab7588f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MAX_DELAY_AFTER_OSCILLATOR';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
500
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '25';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a391d926a92f7cd486866d16b53bf9bc8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'I2C_ADDR_DIRECT_ACCESS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x11
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '28';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Can be used to access a given register at a time.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1acae259a7c57b67ef6c890c1c178dce00';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'I2C_ADDR_FULL_ACCESS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x10
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '29';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Can be used to access a set of register at a time.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1ad0763fd256db4ec1ecc62f84bbff56e2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OSCILLATOR_TYPE_CRYSTAL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '32';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Crystal.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1ad079e38ccae2f64aa341332e2ccb8b8e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OSCILLATOR_TYPE_REFCLK';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '33';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reference clock.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1aaaa8a7748321c8739d938babeb67d8e9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CLOCK_32K';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '35';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
32.768kHz
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a7161794919bf15d59a7266f4f4286345';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CLOCK_12M';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '36';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
12Mhz
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1abc1ed9bc20cc60e460427165671eedbe';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CLOCK_13M';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '37';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
13Mhz
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a7e2e33a05c45d29254940aa2e6787881';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CLOCK_19_2M';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '38';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
19.2Mhz
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1aba23c874d4dca5d2a56e7ed7f8c8972e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CLOCK_24M';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
5
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '39';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
24Mhz
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1aab44e9c9586b2d6ca816e20dd04bc7b4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CLOCK_26M';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
6
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '40';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
26Mhz
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a99d478076fadfab2791d09e00ed1a780';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CLOCK_38_4M';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
7
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '41';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
38.4Mhz
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a128f40c85c30594203fd937611ba5f2c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RDS_STANDARD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '43';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Mode.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1acdc3372b73fee284997dbef795123257';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RDS_VERBOSE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '44';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RDS Mode.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1aecb43af824137b805ef778575bb1755b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RDA_FM_BAND_USA_EU';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '46';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
87.5–108 MHz (US / Europe, Default)
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1ad4baaf95cb1692947a4faebfea59c5ba';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RDA_FM_BAND_JAPAN_WIDE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '47';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
76–91 MHz (Japan wide band)
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a4a70e6ea770ca5e1ab7035a9838a699b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RDA_FM_BAND_WORLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '48';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
76–108 MHz (world wide)
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a6110423784aaf630ec0ade041bc296a5';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RDA_FM_BAND_SPECIAL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '49';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
65 –76 MHz(East Europe) or 50 - 65MHz(see bit 9 of gegister 0x06)
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a52b8411f4955a310beb41daaa5f352af';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RDA_SEEK_WRAP';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '51';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Wrap at the upper or lower band limit and continue seeking.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a8b7a44cf48668f90e59f62b34b4ce16a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RDA_SEEK_STOP';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '52';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Stop seeking at the upper or lower band limit.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a74e39d5bc02861c91b57da7751729ef1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RDA_SEEK_DOWN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '53';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek Up.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a6cfac82e09114c1cdf276646ad595949';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RDA_SEEK_UP';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '54';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Seek Down.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a748ad53bef975af9c1edbcacc58e5be4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG00';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x00
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '56';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a09a3d3fef9f53f0dbe1dd0072f02c1d4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG02';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x02
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '57';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1ac2446f96334b533154259a21c13950e6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG03';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x03
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '58';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a88dee04c27a51e335798ab012dccbea1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG04';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x04
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '59';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a848ac333ddfea97bc1f16a2e69eaf953';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG05';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x05
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '60';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1ac5641e8e0c3254714bcd533a4b0111ca';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG06';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x06
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '61';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a2a41df49654ae321f569bfabfa74de24';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG07';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x07
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '62';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a5ec596211175cecd682755f5e996b6dd';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG0A';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0A
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '63';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a76c73d8e23848f8d73679450c2d7264b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG0B';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0B
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '64';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a0e3b6e600782d453f87223f87784c54d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG0C';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0C
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '65';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a41b7a4f7b9e629eb87dba4152995a616';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG0D';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0D
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '66';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a1a5322c7bc447986d2d3b4d13de95315';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG0E';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0E
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '67';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a949846d6974a39c871614c2f15ee0691';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REG0F';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0F
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '68';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1aab666077c255544a7917c9c3bc1c9823';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SH_REG0A';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '70';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1aab0f53fa6543d47802083a4392f3cae8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SH_REG0B';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '71';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a97d86a295365c8476e3383c294a9ed1d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SH_REG0C';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '72';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a85cd795594517e3bce030696a8a6bb97';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SH_REG0D';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '73';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a03c5e8c07784d364f88f9c856e1468bf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SH_REG0E';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '74';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_r_d_a5807_8h_1a3c08c738466db46639091800ff72d36c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SH_REG0F';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
5
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
      define-mem-desc-line = '75';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/rda5XXX/rda5807/RDA5807/RDA5807.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
